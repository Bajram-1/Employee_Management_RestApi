@using Employee_Management.Common.Enums
@model Employee_Management.BLL.DTO.ViewModels.ProjectCreateViewModel

<h2 class="text-center mb-4">Create Project</h2>
<div class="card">
    <div class="card-header">
        <h4 class="mb-0">Project Details</h4>
    </div>
    <div class="card-body">
        <form asp-action="Create" method="post" onsubmit="return validateDates()">
            <div class="form-group">
                <label asp-for="Name"></label>
                <input asp-for="Name" class="form-control" placeholder="Enter project name" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description"></label>
                <textarea asp-for="Description" class="form-control" rows="4" placeholder="Enter project description"></textarea>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="StartDate"></label>
                <input asp-for="StartDate" class="form-control" type="date" id="StartDate" />
                <span asp-validation-for="StartDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="EndDate"></label>
                <input asp-for="EndDate" class="form-control" type="date" id="EndDate" />
                <span asp-validation-for="EndDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Status" class="form-label"></label>
                <select asp-for="Status" class="form-control" asp-items="Html.GetEnumSelectList<ProjectStatus>()"></select>
                <span asp-validation-for="Status" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Assignees" class="form-label"></label>
                <select asp-for="Assignees" class="form-control" multiple="multiple">
                    @foreach (var employee in Model.AllEmployees)
                    {
                        <option value="@employee.UserName">@employee.UserName</option>
                    }
                </select>
                <span asp-validation-for="Assignees" class="text-danger"></span>
            </div>
            <br />
            <div class="form-group">
                <button type="submit" class="btn btn-primary" style="margin-right: 10px;">Create</button>
                <a asp-action="Index" class="btn btn-secondary ml-2">Back to List</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        function validateDates() {
            const startDateInput = document.getElementById("StartDate");
            const endDateInput = document.getElementById("EndDate");
            const startDate = new Date(startDateInput.value);
            const endDate = new Date(endDateInput.value);
            const dateError = document.getElementById("dateError");

            if (dateError) {
                dateError.remove();
            }

            if (endDate < startDate) {
                const errorMessage = document.createElement("div");
                errorMessage.id = "dateError";
                errorMessage.className = "text-danger";
                errorMessage.textContent = "End Date cannot be earlier than Start Date.";
                endDateInput.parentNode.insertBefore(errorMessage, endDateInput.nextSibling);
                return false;
            }
            return true;
        }
    </script>
}

<style>
    .profile-edit-form {
        max-width: 700px;
        margin: 0 auto;
    }

    .form-group label {
        font-weight: bold;
    }

    .form-control {
        border-radius: 0.25rem;
    }

    .btn-primary {
        background-color: #4CAF50;
        border-color: #4CAF50;
    }
</style>