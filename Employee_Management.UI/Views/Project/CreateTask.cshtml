@model Employee_Management.BLL.DTO.ViewModels.TaskCreateViewModel

@{
    ViewData["Title"] = "Create Task";
}

<h2 class="text-center mb-4">Create Task</h2>

<div class="card">
    <div class="card-header">
        <h4 class="mb-0">Task Details</h4>
    </div>
    <div class="card-body">
        <form asp-controller="Tasks" asp-action="Create" method="post" onsubmit="return validateDates()">
            <div class="form-group">
                <label asp-for="Title"></label>
                <input asp-for="Title" class="form-control" placeholder="Enter task title" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Description"></label>
                <textarea asp-for="Description" class="form-control" rows="4" placeholder="Enter task description"></textarea>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="StartDate"></label>
                <input asp-for="StartDate" id="StartDate" class="form-control" type="date" />
                <span asp-validation-for="StartDate" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="DueDate"></label>
                <input asp-for="DueDate" id="DueDate" class="form-control" type="date" />
                <span asp-validation-for="DueDate" class="text-danger"></span>
            </div>

            <input type="hidden" asp-for="ProjectId" />

            <div id="dateError" class="text-danger mb-3"></div>

            <div class="form-group">
                <button type="submit" class="btn btn-primary">Create</button>
                <a asp-action="Index" class="btn btn-secondary ml-2">Cancel</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const today = new Date().toISOString().split('T')[0];
            document.getElementById("StartDate").value = today;
            document.getElementById("DueDate").value = today;
        });

        function validateDates() {
            const startDate = new Date(document.getElementById("StartDate").value);
            const dueDate = new Date(document.getElementById("DueDate").value);
            const dateError = document.getElementById("dateError");

            if (dueDate < startDate) {
                dateError.textContent = "Due Date cannot be earlier than Start Date.";
                return false;
            } else {
                dateError.textContent = "";
                return true;
            }
        }
    </script>
}

<style>
    .card {
        max-width: 600px;
        margin: 20px auto;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        border-radius: 8px;
    }

    .card-header {
        background-color: #007bff;
        color: white;
        border-top-left-radius: 8px;
        border-top-right-radius: 8px;
    }

    .form-control {
        border-radius: 4px;
    }

    .btn {
        border-radius: 4px;
    }

    .text-danger {
        font-size: 0.9em;
    }
</style>